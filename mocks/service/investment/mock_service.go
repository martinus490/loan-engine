// Code generated by MockGen. DO NOT EDIT.
// Source: service/investment/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "loan_engine/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockInvestmentService is a mock of InvestmentService interface.
type MockInvestmentService struct {
	ctrl     *gomock.Controller
	recorder *MockInvestmentServiceMockRecorder
}

// MockInvestmentServiceMockRecorder is the mock recorder for MockInvestmentService.
type MockInvestmentServiceMockRecorder struct {
	mock *MockInvestmentService
}

// NewMockInvestmentService creates a new mock instance.
func NewMockInvestmentService(ctrl *gomock.Controller) *MockInvestmentService {
	mock := &MockInvestmentService{ctrl: ctrl}
	mock.recorder = &MockInvestmentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInvestmentService) EXPECT() *MockInvestmentServiceMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockInvestmentService) Save(request model.Investment) (model.Investment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", request)
	ret0, _ := ret[0].(model.Investment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockInvestmentServiceMockRecorder) Save(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockInvestmentService)(nil).Save), request)
}
