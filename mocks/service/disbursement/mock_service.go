// Code generated by MockGen. DO NOT EDIT.
// Source: service/disbursement/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	model "loan_engine/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDisbursementService is a mock of DisbursementService interface.
type MockDisbursementService struct {
	ctrl     *gomock.Controller
	recorder *MockDisbursementServiceMockRecorder
}

// MockDisbursementServiceMockRecorder is the mock recorder for MockDisbursementService.
type MockDisbursementServiceMockRecorder struct {
	mock *MockDisbursementService
}

// NewMockDisbursementService creates a new mock instance.
func NewMockDisbursementService(ctrl *gomock.Controller) *MockDisbursementService {
	mock := &MockDisbursementService{ctrl: ctrl}
	mock.recorder = &MockDisbursementServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDisbursementService) EXPECT() *MockDisbursementServiceMockRecorder {
	return m.recorder
}

// Save mocks base method.
func (m *MockDisbursementService) Save(disbursement model.Disbursement) (model.Disbursement, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", disbursement)
	ret0, _ := ret[0].(model.Disbursement)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockDisbursementServiceMockRecorder) Save(disbursement interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockDisbursementService)(nil).Save), disbursement)
}
